DROP FUNCTION IF EXISTS MADLIB_SCHEMA.hash_array(INT4[]);
CREATE FUNCTION MADLIB_SCHEMA.hash_array(INT4[]) RETURNS INT4 
AS 'DTree_stat.so', 'hash_array'
LANGUAGE C IMMUTABLE;

DROP FUNCTION IF EXISTS MADLIB_SCHEMA.findentropy(int4[], int4[], int4, int4);
CREATE FUNCTION MADLIB_SCHEMA.findentropy(int4[], int4[], int4, int4) RETURNS FLOAT8 
AS 'DTree_stat.so', 'findentropy'
LANGUAGE C IMMUTABLE;

DROP FUNCTION IF EXISTS MADLIB_SCHEMA.aggr_InfoGain(FLOAT8[], FLOAT8, FLOAT8, INT4, INT4, INT4);
CREATE FUNCTION MADLIB_SCHEMA.aggr_InfoGain(FLOAT8[], FLOAT8, FLOAT8, INT4, INT4, INT4) RETURNS FLOAT8[] 
AS 'DTree_stat.so', 'aggr_InfoGain'
LANGUAGE C IMMUTABLE;

DROP FUNCTION IF EXISTSMADLIB_SCHEMA.compute_InfoGain(FLOAT8[], INT4, INT4);
CREATE FUNCTION MADLIB_SCHEMA.compute_InfoGain(FLOAT8[], INT4, INT4) RETURNS FLOAT8[] 
AS 'DTree_stat.so', 'compute_InfoGain'
LANGUAGE C IMMUTABLE;

DROP FUNCTION IF EXISTS MADLIB_SCHEMA.mallocset(INT4, INT4);
CREATE FUNCTION MADLIB_SCHEMA.mallocset(INT4, INT4) RETURNS FLOAT8[] 
AS 'DTree_stat.so', 'mallocset'
LANGUAGE C IMMUTABLE;

DROP FUNCTION IF EXISTS MADLIB_SCHEMA.WeightedNoReplacement(INT4, INT4);
CREATE FUNCTION MADLIB_SCHEMA.WeightedNoReplacement(INT4, INT4) RETURNS INT8[] 
AS 'DTree_stat.so', 'WeightedNoReplacement'
LANGUAGE C IMMUTABLE;

DROP FUNCTION IF EXISTS MADLIB_SCHEMA.array_add(FLOAT8[], FLOAT8[]);
CREATE FUNCTION MADLIB_SCHEMA.array_add(FLOAT8[], FLOAT8[]) RETURNS FLOAT8[] 
AS 'DTree_stat.so', 'array_add'
LANGUAGE C IMMUTABLE;
